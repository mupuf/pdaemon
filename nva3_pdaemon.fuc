section #nva3_pdaemon_data
/* memory map
 * start	stop		purpose
 * ------------------------------------
 * 0x0		0x400		stack
 * 0x400	0x800		dispatch
 */
equ #data_stack 0x400
b8 0xfe
align 0x400

equ #data_dispatch 0x0
b8 0xfe
align 0x400


section #nva3_pdaemon_code
init:
	/* deactivate interrupt 0 and 1 */
	bclr $flags ie0
	bclr $flags ie1

	/* set the stack pointer */
	mov $r3 #data_stack
	mov $sp $r3

	bra #main
	exit

/* mmio sync:
 * In:	None
 * Out:	None
 */
mmsync:
	mov $r9 0
	mmloop_:
		movw $r15 0xeb00
		sethi $r15 0x10000
		iord $r15 I[$r15]
		add b32 $r9 $r9 1
		extr $r15 $r15 12:14
		bra nz #mmloop_
	ret

/* mmio write sync:
 * In: 	$r10: addr
 * 	$r11: value
 * Out:	None
 */
mmwr:
	call #mmsync
	movw $r15 0xe800
	sethi $r15 0x10000
	iowr I[$r15] $r10
	add b32 $r15 0x100
	iowr I[$r15] $r11
	add b32 $r15 0x200
	mov $r11 0xf2
	sethi $r11 0x10000
	iowr I[$r15] $r11
	iord $r11 I[$r15]
	ret

/* mmio write sync:
 * In: 	$r10: addr
 * 	$r11: value
 * Out:	None
 */
mmwrs:
	call #mmwr
	call #mmsync
	ret

/* mmio read:
 * In: 	$r10: addr
 * Out:	$r10: value
 */
mmrd:
	call #mmsync
	movw $r15 0xe800
	sethi $r15 0x10000
	iowr I[$r15] $r10
	add b32 $r15 0x300
	mov $r11 0xf1
	sethi $r11 0x10000
	iowr I[$r15] $r11
	iord $r11 I[$r15]
	call #mmsync
	movw $r15 0xe900
	sethi $r15 0x10000
	iord $r10 I[$r15]
	ret

main:
	// $r10 = mmio_rd(0x9400)
	movw $r10 0x9400
	sethi $r10 0x0
	call #mmrd

	// mmio_wr(0x9420, $r10)
	mov b32 $r11 $r10
	movw $r10 0x9420
	sethi $r10 0x0
	call #mmwrs

	bra #main
align 256
